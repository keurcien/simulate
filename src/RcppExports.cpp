// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <RcppArmadillo.h>
#include <Rcpp.h>

using namespace Rcpp;

// jumps_from_map
NumericVector jumps_from_map(const NumericVector& map, const double& lambda);
RcppExport SEXP simulate_jumps_from_map(SEXP mapSEXP, SEXP lambdaSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const NumericVector& >::type map(mapSEXP);
    Rcpp::traits::input_parameter< const double& >::type lambda(lambdaSEXP);
    rcpp_result_gen = Rcpp::wrap(jumps_from_map(map, lambda));
    return rcpp_result_gen;
END_RCPP
}
// ancestry_chunks
LogicalVector ancestry_chunks(const NumericVector& jumps);
RcppExport SEXP simulate_ancestry_chunks(SEXP jumpsSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const NumericVector& >::type jumps(jumpsSEXP);
    rcpp_result_gen = Rcpp::wrap(ancestry_chunks(jumps));
    return rcpp_result_gen;
END_RCPP
}
// haplo_to_geno
NumericMatrix haplo_to_geno(const NumericMatrix& H);
RcppExport SEXP simulate_haplo_to_geno(SEXP HSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const NumericMatrix& >::type H(HSEXP);
    rcpp_result_gen = Rcpp::wrap(haplo_to_geno(H));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"simulate_jumps_from_map", (DL_FUNC) &simulate_jumps_from_map, 2},
    {"simulate_ancestry_chunks", (DL_FUNC) &simulate_ancestry_chunks, 1},
    {"simulate_haplo_to_geno", (DL_FUNC) &simulate_haplo_to_geno, 1},
    {NULL, NULL, 0}
};

RcppExport void R_init_simulate(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
